<template>
	<view class="hotlebox">
		<loading>
		</loading>
		<view class="hotmaps" v-if="ismapshow">
			<map id="midMap" :include-points="include_points"  :latitude="latitude" :longitude="longitude"
				:scale="scale" :style=" {width: '750rpx',height: screenHeights + 'px'}" :markers="markers"
				:show-location="true"
				@regionchange="regionchange" @callouttap="markertaps">
			</map>
			<view class="maphotel" v-if="hotmaps && !isre_one">
				<swiper :current="currents" style="flex: 1;" :duration="300" @change="onchange">
					<swiper-item class="hotelist" v-for="(item,index) in maplistdata" :key="index"  @click.stop="selectlist(item)">
						<view class="hotels">
							<view class="hotleft">
								<image class="hotleftimage" v-if="item.titleImg == ''" src="@/static/img/hotel-small-img2.jpg" mode=""></image>
								<image class="hotleftimage" v-else :src="item.titleImg" mode=""></image>
							</view>
							<view class="hotright">
								<text class="titles">{{item.resName}}</text>
								<text class="address" v-if="item.distanceTxt != null">{{item.distanceTxt}}</text>
								<text class="address" v-else>地址：{{item.address}}</text>
								<text class="intros">简介：{{item.intro}}</text>
								<view class="money">
									<view class="resGrades">
										<view v-for="(items,index) in item.resGr" :key="index">
											<text class="iconfont fontPrice" style="font-size: 30upx;">&#xe63e;</text>
										</view>
									</view>
									<view class="resGradest">
										<text class="monsle fontPrice">￥</text>
										<text class="fontPrice">{{item.minPrice}}</text>
										<text class="mosrig fontPrice">起</text>
									</view>
								</view>
							</view>
						</view>
					</swiper-item>
				</swiper>
			</view>
		</view>
		<list class="hotBox" ref='hotlists' @loadmore="fetch" loadmoreoffset="10" :style=" {height:screenHeightsMaps + 'px'}"  >
			<cell class="hot_topsbx">
			</cell>
			<cell class="hotelist"   v-for="(item,index) in hotellist" :key="index" v-if="hotellist!=undefined && hotellist.length > 0" >
				<view class="hotels" @click.stop="selectlist(item,index)" :key=index>
					<view class="hotleft">
						<image class="hotleftimage" v-if="item.titleImg == ''" src="@/static/img/hotel-small-img2.jpg" mode=""></image>
						<image class="hotleftimage" v-else :src="item.titleImg" mode=""></image>
					</view>
					<view class="hotright">
						<text class="titles">{{item.resName}}</text>
						<text class="address" v-if="item.distanceTxt != null">{{item.distanceTxt}}</text>
						<text class="address" v-else>地址：{{item.address}}</text>
						<text class="intros">简介：{{item.intro}}</text>
						<view class="money">
							<view class="resGrades">
								<view v-for="(items,index) in item.resGr" :key="index">
									<text class="iconfont fontPrice" style="font-size: 30upx;">&#xe63e;</text>
								</view>
							</view>
							<view class="resGradest">
								<text class="monsle fontPrice">￥</text>
								<text class="fontPrice">{{item.minPrice}}</text>
								<text class="mosrig fontPrice">起</text>
							</view>
						</view>
					</view>
				</view>
			</cell>
			<cell class="hotelist" v-else>
				<image class="gjImg" v-if="imgFlag" src="@/static/img/m_ticketList.png" mode=""></image>
				<image class="noData" v-else src="@/static/img/noData.png" mode="widthFix"></image>
				<div class="rblcok" v-if="!imgFlag" @click="rblcok">重新搜索</div>
			</cell>
		</list>
		<view class="hotclicks" @click="hotisMaps()" v-if="hotellist.length > 0 && !isre_one">
			<image class="hotclicksimgs" v-if="hotmaps" src="@/static/img/home/hot_ord.png" mode=""></image>
			<image class="hotclicksimgs" v-if="!hotmaps" src="@/static/img/home/hot_map.png" mode=""></image>
		</view>
		<view class="share-box" ref="shareBoxs" @touchmove.stop.prevent="moveStop" @click="isreclik">
		</view>
		<view class="share-item" ref="shareItems" @click.stop>
			<view class="recommended">
				<view v-if="isindex == 0" class="remtops">
					<view class="recommendedlist" v-for="(item,index) in  recommended" @click="reclokc(item)" :class="reconaid == item.id ? 'posits':''" :key="index" :style="index ==recommended.length -1 ? {border:0}:''">
						<text class="refonts">{{item.name}}</text>
						<text class="iconfont iocrefonts" v-if="reconaid == item.id">&#xe620;</text>
					</view>
				</view>
				<view v-if="isindex == 1" class="remtops">
					<view class="restst">
						<text class="restitle">价格区间</text>
						<view class="htolevel">
							<view class="htlist" @click="ckprice(item,index)" v-for="(item,index) in hotprice"
								:class="hotpriceid == item.id ? 'ischekc':''" :key="index">
								<text class="htlistfont" :class="hotpriceid == item.id ? 'htlistfontec':''">{{item.name}}</text>
							</view>
						</view>
					</view>
					<view class="restst remtops">
						<text class="restitle">星级</text>
						<view class="htolevel">
							<view class="htlist" @click="ckleve(item,index)" v-for="(item,index) in hotlevel"
								:class="isckleve(item,index) ? 'ischekc':''" :key="index">
								<text class="iconfont" style="font-size: 13px;" :class="isckleve(item,index) ? 'htlistfontec':''">&#xe629;</text>
								<text class="htlistfont" :class="isckleve(item,index) ? 'htlistfontec':''">{{item.name}}</text>
							</view>
						</view>
					</view>
				</view>
				<view v-if="isindex == 2" class="remtops">
					<view class="position_ops">
						<view class="position-op-le">
							<view class="posi-lists" :class="index == isposit ? 'posi-lists-ok':''" @click="ispositCk(index)" v-for="(item,index) in stlist" v-if="index != stlist.length - 1" :key="index">
								<view v-if="index == positionInx" class="posi_o"></view><text :class="index == positionInx ? 'posi_os':''" class="posi-lifont">{{item.name}}</text>
							</view>
						</view>
						<list class="position-op-ri">
							<cell class="position-op-ri-li" v-for="(item,indexs) in stlist[isposit].list" @click="positionCk(item)" :class="positionVal == item && positionInx == isposit ? 'position-opst':''" :key="indexs">
								<text class="position-opfont">{{item}}</text>
								<text v-if="positionVal == item && positionInx == isposit" class="iconfont" style="color: #007AFF;" >&#xe620;</text>
							</cell>
						</list>
					</view>
				</view>
				<view v-if="isindex == 3" class="brandlist remtops">
					<waterfall column-count="3" column-width="auto" class="barndlist">
					    <cell class="barndlist-li" v-for="(item,index) in stlist[stlist.length -1].list" @click="brandCks(item)" :key="index">
							<div class="barndlistdv" :class="brandlists.includes(item) ? 'actives':''" >
								<text class="barndlist-lifont"  :class="brandlists.includes(item) ? 'actives':''">{{item}}</text>
							</div> 
					    </cell>
					</waterfall>
				</view>
				<view class="btnleve" v-if="isindex != 0 && isindex != -1">
					<view class="btnlev_left" @click="btclone(isindex)">
						<text class="btnlevfont">恢复默认</text>
					</view>
					<view class="btnlev_right" @click="btnselec(isindex)">
						<text class="btnlev_rightfont">确认</text>
					</view>
				</view>
			</view>
		</view>
		<view class="hot_topst" @click.stop v-if="isNavShows">
			<view class="Navigations">
				<view class="smtis">
					<text @click="rblcok" class="iconfont" style="color: #000000;">&#xe61e;</text>
				</view>
				<view class="ongbutns">
					<view class="onleft" @click="updates">
						<view class="on_olefts">
							<text class="onfonts tr-colors">1</text><text class="onfonts">晚</text>
						</view>
						<view class="on_orights">
							<view class="on_tst">
								<text class="onfonts tr-colors">{{startDate.substring(6,10)}}</text>
								<text class="onfonts">入</text>
							</view>
							<view class="on_tst">
								<text class="onfonts tr-colors">{{endDate.substring(6,10)}}</text>
								<text class="onfonts">离</text>
							</view>
						</view>
					</view>
					<view class="onright">
						<input class="orvlues" disabled v-model="sevalie" @click="selist">
						</input>
						<text class="iconfont" style="color: #C8C7CC;" v-if="sevalie != '关键词/位置/酒店名'" @click="delets">&#xe641;</text>
					</view>
				</view>
				<view class="smtis">
				</view>
			</view>
			<view class="sel_coi" :class="isindex == -1  ? 'sel_cois':''" >
				<view class="se_list" @click="seclick(item,index)" v-for="(item,index) in screen" :key="index">
					<view class="se_nlis" :class="index == isindex || screenks(index) ? 'se_okli':''">
						<text class="se_lname" :class="item.name.length > 4 ? 'se_lnames':''">{{item.name}}</text>
						<image class="seimgs" v-if="index == isindex" src="@/static/img/home/hottop.png" mode=""></image>
						<image class="seimgs" v-else-if="screenks(index)" src="@/static/img/home/hottops.png" mode=""></image>
						<image class="seimgs" v-else src="@/static/img/home/hotbott.png" mode=""></image>
					</view>
				</view>
			</view>
		</view>
	</view>
</template>

<script>
	// const animation = weex.requireModule('animation')
	let appMap = null;
	import {
		mapState
	} from 'vuex';
	import tork from "@/api/torowk.js"
	import utils from '@/untils/util.js'
	export default {
		components:{
		},
		data(){
			return{
				animation:'',
				imageList: [
				          { src: 'https://gd2.alicdn.com/bao/uploaded/i2/T14H1LFwBcXXXXXXXX_!!0-item_pic.jpg'},
				          { src: 'https://gd1.alicdn.com/bao/uploaded/i1/TB1PXJCJFXXXXciXFXXXXXXXXXX_!!0-item_pic.jpg'},
				          { src: 'https://gd3.alicdn.com/bao/uploaded/i3/TB1x6hYLXXXXXazXVXXXXXXXXXX_!!0-item_pic.jpg'}
				        ],
				isNavShows:true,//是否显示导航
				scrollTops:false,//是否滚动了页面
				ismapshow:false,//是否展示地图
				maplistdata:[],//当前地图展示数据
				brandlists:[],//选中的品牌
				positionInx:-1,//当前选中位置筛选的下标
				positionVal:'',//位置值
				isposit:0,//位置筛选默认选中下标
				starts:0,//开始滑动的坐标
				mapshow:false,
				holistshow:false,//是否显示数据
				currents: 0,
				screenHeights: 1000, //地图高度
				scale: 11, //缩放大小
				longitude: '', //经度
				latitude: '', //纬都
				include_points: [], //根据坐标缩放地图大小
				markers: [], //标注
				hotmaps: false,//是否是地图
				ctyslit: '',
				seisno: false,
				isretun: false,
				selistval: [],
				imgFlag: true,
				hotpriceid:-1,//当前选中价格排序
				hotprice:[{
					id:0,
					name: '￥150以下',
					value: {
						priceFrom: 0,
						priceTo: 150
					}
				}, {
					id:1,
					name: '￥150-300',
					value: {
						priceFrom: 150,
						priceTo: 300
					}
				}, {
					id:2,
					name: '￥300-450',
					value: {
						priceFrom: 300,
						priceTo: 450
					}
				}, {
					id:3,
					name: '￥450-600',
					value: {
						priceFrom: 450,
						priceTo: 600
					}
				}, {
					id:4,
					name: '￥600-800',
					value: {
						priceFrom: 600,
						priceTo: 800
					}
				}, {
					id:5,
					name: '￥800以上',
					value: {
						priceFrom: 600,
						priceTo: 999999
					}
				}],
				hotlevel: [{
					id: '-1',
					name: '不限'
				}, {
					id: '27',
					name: '二星及以下'
				},{
					id: '26',
					name: '三星/舒适'
				}, {
					id: '24',
					name: '四星/高档'
				}, {
					id: '23',
					name: '五星/豪华'
				}],
				reconaid: '', //推荐排序
				isre_two: false,
				isre_one: false,
				recommended: [{ //排序类型
					id: 'bookTimes_asc',
					name: '推荐排序'
				}, {
					id: 'minPrice_asc',
					name: '价格从高到低'
				}, {
					id: 'minPrice_desc',
					name: '价格从低到高'
				}, {
					id: 'resGrade_asc',
					name: '酒店星级从高到低'
				}, {
					id: 'resGrade_desc',
					name: '酒店星级从低到高'
				}],
				screen: [{
					id: 1,
					name: '推荐排序'
				}, {
					id: 2,
					name: '价格/星级'
				}, {
					id: 3,
					name: '位置/距离'
				}, {
					id: 4,
					name: '酒店品牌'
				}],
				cityid: '',
				cityids: '',
				totalPatge: 0,
				loadingType: 0,
				contentText: {
					contentdown: '上拉显示更多',
					contentrefresh: '正在加载...',
					contentnomore: '没有更多数据了'
				},
				sevalie: '关键词/位置/酒店名',
				current: '',
				citys: [],
				ishtoel: 'hotel',
				singleDate: false,
				startDate: '',
				endDate: '',
				stlist: [],
				hotellist: [],
				page: 1,
				searchHotelType: "",
				butalist: '',
				itemdata: {},
				isindex: -1,
				levecllist: [],
				levst: [], //星级
				priceFromTo: [], //价格
				clickIn: 0, //当前点击的下标
				ifone_show: true, //是否第一次展示
				screenHeightsMaps:0,//列表高度
			}
		},
		onReady(options) {
			this.screenHeights = uni.getSystemInfoSync().screenHeight; //屏幕高度
			this.screenHeightsMaps = uni.getSystemInfoSync().screenHeight - 105; //减去上面部分高度
			appMap = uni.createMapContext('midMap', this);
		},
		onShow() {
			uni.$on('initavetime',(res)=>{
				this.startDate = res.das.date.re; //开始时间
				this.endDate = res.date.date.re; //结束时间
				
				uni.$off('initavetime')
			})
			uni.$on('wx_Hotel_Ais',(res)=>{
				if(res.ts == 1){
					if(res.type == 'position'){//位置
						this.positionInx = res.id - 1;
						this.isposit = res.id - 1;
						this.positionVal = res.data;
						this.cityids = '';
						this.screen[2].name = res.data;
						this.seposiVal(this.positionInx,this.positionVal,this.cityid)
					} else if(res.type == 'keyword'){//关键词
						this.cityids = res.data;
						let db = [];
						if(res.id != 0){ //判断是否是地标  酒店id没有逗号
							db = res.id.split(',');
						} else {
							this.longitude = '';
							this.latitude = '';
						}
						if(db.length > 1){//判断是不是地标
							this.longitude = db[0];
							this.latitude = db[1];
						}
						this.search(1);
					} else if(res.type == 'brand'){//品牌
						this.brandlists = [res.data];
						this.search(1);
					}
					this.sevalie = res.data;//输入框值
				}
				uni.$off('wx_Hotel_Ais')
			})
		},
		onLoad(items) {
			this.itemdata = JSON.parse(items.data);
			let item = this.itemdata;
			this.hotmaps = item.map == 2 ? true:false;
			let cty = item.city.name.split(',')[0];//城市信息
			this.cityid = cty; //城市
			let ctyIds = item.city.id.split(',');
			if(item.citys.name != ''){//是否有关键字
				this.longitude = '';
				this.latitude = '';
				if(item.citys.type == 'position'){//位置
					this.positionInx = item.citys.id - 1;
					this.isposit = item.citys.id - 1;
					this.positionVal = item.citys.name;
					this.seposiVal(this.positionInx,this.positionVal,this.cityid);
				} else if(item.citys.type == 'keyword'){//关键词
					this.cityids = item.citys.name;
					let db = [];
					if(item.citys.id != 0){ //判断搜索的是地标 还是酒店
						db = item.citys.id.split(',');
					} else {
						this.longitude = '';
						this.latitude = '';
					}
					if(db.length > 1){//判断是不是地标
						this.longitude = db[0];
						this.latitude = db[1];
					}
					this.search(1);
				} else if(item.citys.type == 'brand'){//品牌
					this.brandlists = [item.citys.name];
					this.screen[3].name = item.citys.name;
					this.search(1);
				}
				this.sevalie = item.citys.name;//输入框值
			} else {
				if(ctyIds.length > 1){//判断是否有 使用定位
					this.longitude = ctyIds[0];
					this.latitude = ctyIds[1];
					this.cityids = item.city.name.split(',')[1];
					this.sevalie = item.city.name.split(',')[1];
				}
				this.search(1);
			}
			
			this.longlist = this.longitudelatitude;
			this.startDate = item.se_doubletimel; //开始时间
			this.endDate = item.se_doubletimer; //结束时间
			this.butalist = item.butalist; //人员
		},
		created() {
			this.animation = weex.requireModule('animation');
			var domModule = weex.requireModule("dom");
			domModule.addRule('fontFace', {  
			       'fontFamily': 'iconfont',  
			       'src': "url(\'https://at.alicdn.com/t/font_1399933_7ttzdrtmwel.ttf\')"  
			})
		},
		methods:{
			onchange (event) {
				let index = event.detail.current;
				this.currents = index; //酒店下标
				this.clickIn = index; //地图选中下标
				this.maplistshow();
			},
			fetch(){
				// if(this.hotellist.length == 10){
					this.search(2);
				// }
				
			},
			updates(){//点击跳转修改时间
				uni.navigateTo({
					url:'/pages-book/book/mainModules/majorFunction/hotelselect/hoteldate?statime=' + this.startDate + '&endtime=' + this.endDate
				})
			},
			addlistsearch(){//加载更多
				this.search(2);
			},
			async seposiVal(inx,name,city){//获取地铁，机场车站的经 == 1纬度
				if(inx == 1 ||inx == 3){//机场车站   地铁
					let tys = '';
					if (inx == 1) { //机场车站
						tys = '飞机场,火车站,公交车站'
					} else {
						tys = '地铁站'
					}
					try{
						let dats = {
							region:city,
							keyword: name,
							get_subpois:1,
							filter: 'category=' +tys
						}
						let res = await tork.placesuggestion(dats);
						let locst = res.data[0].location;
						this.longitude = locst.lng;
						this.latitude = locst.lat;
						this.search(1);
					}catch(err){
						console.log(err)
					}	
				} else {
					this.longitude = '';
					this.latitude = '';
					this.search(1);
				}
			},
			screenks(ind){//是否有选中的值 0排序  1价格星级 2位置 3品牌
				if(ind == 0){
					if(this.reconaid != ''){
						return true
					} else {
						return false
					}
				} else if(ind == 1){
					if(this.levecllist.length >0 || this.priceFromTo.length > 0){
						return true
					} else {
						return false
					}
				} else if(ind == 2){
					if(this.positionVal != ''){
						return true
					} else {
						return false
					}
				} else if(ind == 3){
					if(this.brandlists.length > 0){
						return true
					} else {
						return false
					}
				}
			},
			brandCks(its){//点击添加或者删除品牌
				if(this.brandlists.includes(its)){
					 this.brandlists.splice(this.brandlists.findIndex(item => item === its), 1)
				} else {
					this.brandlists.push(its);
				}
			},
			positionCk(its){//选中位置筛选右边值
				if(this.positionVal == its){
					this.positionVal = '';
					this.positionInx = -1;
				} else {
					this.positionVal = its;
					this.positionInx = this.isposit;//当前选中的位置 左边的下标
				}
			},
			ispositCk(ins){//选中位置筛选左边
				this.isposit = ins;
			},
			// touchstarts(e){
			//     this.starts = e.touches[0].clientY;
			// },
			// touchends(e){//向下滑动
			//     let end = e.changedTouches[0].clientY;
			//     if(end-this.starts>100){
			// 		this.hotisMaps();
			//     }
			// },
			moveStop(){//阻止遮罩滚动穿透
				return
			},
			hotisMaps(){//点击切换
				this.hotmaps = !this.hotmaps;
				if(this.hotmaps){
					this.animation.transition(this.$refs.hotlists, {
						styles: {
							transform: 'translateY(100%)',
						},
						duration: 300, //ms
						timingFunction: 'ease',
						needLayout:false,
						delay: 0 //ms
						}, function (re) {
						}
					)
				} else {
					this.animation.transition(this.$refs.hotlists, {
						styles: {
							transform: 'translateY(0)',
						},
						duration: 300, //ms
						timingFunction: 'ease',
						needLayout:false,
						delay: 0 //ms
						}, function (re) {
						}
					)
				}
				
				let that = this;
				// that.isNavShows = false;
				// setTimeout(()=>{
				// 	that.isNavShows = true;
				// },300)
			},
			markertaps(su) { //获取当前点击的下标
				this.clickIn = su.detail.markerId; //id
				this.currents = this.clickIn;
				this.maplistshow(this.clickIn); //重新绘制地图
			},
			maplistshow(ins) { //展示酒店数据地图
				let that = this;
				let su = this.maplistdata; //酒店数据
				let mark = [];
				let inclsu = []; //所有坐标
				that.markers = [];
				for (let k = 0; k < su.length; k++) {
					if(su[k].lat != null){
						mark.push({
							id: k,
							latitude: su[k].lat,
							longitude: su[k].lon,
							iconPath: '/static/img/home/map_hotel.png',
							width: 1, //图标大小
							height: 1,
							callout: {
								content: '￥' + su[k].minPrice,
								color: k == that.clickIn ? "#ffffff":"#FA6803",
								fontSize: 14,
								bgColor: k == that.clickIn ? "#FA6803":"#ffffff",
								display: 'ALWAYS',
								padding: 12,
								borderRadius: 5
							},
							// anchor: { x: 0.05, y: 0.8 } //图标偏移位置
						})
						inclsu.push({
							latitude: su[k].lat,
							longitude: su[k].lon
						})
					}
				}
				if (this.ifone_show == true) { //是否根据坐标缩放地图
					that.scale = 18;
					that.include_points = inclsu;
					this.ifone_show = false;
				}
				that.markers = mark; //地图展示内容
				if(that.markers.length > 0){
					this.ismapshow = true;
				}	
			},
			regionchange() {//监听地图移动
				// let _that = this;
				// appMap.getCenterLocation({ //获取当前坐标
				// 	type: 'gcj02',
				// 	success: function(res) {
				// 		if(_that.holistshow){
				// 			if(_that.mapad == 1){
				// 				_that.$store.commit("mapad_add", 2)
				// 			} else {
				// 				_that.longitude = res.longitude.toString(); //经度
				// 				_that.latitude = res.latitude.toString(); //纬都
				// 				if(_that.holistshow){
				// 					_that.search(1);
				// 				}
				// 				_that.$store.commit("mapad_add", 1)
				// 			}
				// 		}
				// 		_that.holistshow = true;
				// 	}
				// });
			},
			async search_h(ev) { //监听酒店搜索的值
				let _this = this
				let va = _this.ctyslit.trim() //获取搜索框的值
				if (va.length > 0) {
			
					try {
						let res = await tork.getCityNames({
							cityName: _this.cityid,
							keyword: va
						})
			
						if (res.code == 200) {
							let dat = res.data;
							_this.selistval = [];
							let vist = true;
							for (let i in dat) { //赋值到页面
								if (dat[i].name.indexOf(va) != -1) {
									vist = false;
								}
								_this.selistval.push(dat[i]);
							}
							_this.seisno = vist;
							_this.sevest = true;
						}
					} catch (e) {
						console.log(e)
			
					}
				} else {
					_this.sevest = false;
				}
			},
			trim(ev) { //判断是否有值
				if (ev.trim().length > 0) {
					return true;
				} else {
					return false;
				}
			},
			selvlist(it) {
				if (it.length == 0) {
					return [this.hotlevel[0].id]
				} else {
					let strit = it.join(',');
					return [strit]
				}
			},
			btnselec(its) { //确认 1星级价格筛选 2位置  3品牌 
				this.isreclik();
				if(its == 1){
					let str = [];
					if (this.hotpriceid == -1) {
						this.priceFromTo = [];
					} else {
						this.priceFromTo = [{
							priceFrom: this.hotprice[this.hotpriceid].value.priceFrom,
							priceTo: this.hotprice[this.hotpriceid].value.priceTo
						}]
						str.push(this.hotprice[this.hotpriceid].name);//获取被选中的价格中文
					}
					
					for (let j in this.levecllist) {//获取被选中星级的中文
						for (let k in this.hotlevel) {
							if(this.hotlevel[k].id == this.levecllist[j]){
								str.push(this.hotlevel[k].name)
							}
						}
					}
					this.screen[1].name = str.join(',');//修改页面参数
					if(str == ''){
						this.screen[1].name = '价格/星级';
					}
					this.search(1);
				} else if(its == 2){//位置值
					if(this.positionVal == ''){
						this.screen[2].name = '位置/距离';
					} else {
						this.screen[2].name = this.positionVal;//修改页面参数
					}
					this.cityids = '';
					this.sevalie = '关键词/位置/酒店名';//清空搜索关键字
					this.seposiVal(this.positionInx,this.positionVal,this.cityid)
				} else if(its == 3){//选中的品牌
					if(this.brandlists.join(',') == ''){
						this.screen[3].name = '酒店品牌';
					} else {
						this.screen[3].name = this.brandlists.join(',');//修改页面参数
					}
					this.search(1);
				}
			},
			btclone(its) { //1星级价格筛选恢复默认 3品牌恢复默认
				let that = this;
				this.hotpriceid = -1;
				if(its == 1){
					this.screen[1].name = '价格/星级';
					this.levecllist = [];
					this.priceFromTo = [];
				} else if(its == 2){
					this.screen[2].name = '位置/距离';
					this.positionInx = -1;//当前选中位置筛选的下标
					this.isposit = 0;//位置筛选默认选中下标
					this.positionVal = '';
					this.longitude = '';
					this.latitude = '';
				}else if(its == 3){
					for (let k in this.brandlists) {
						if(this.brandlists[k] == this.sevalie){
							this.sevalie = '';
						}
					}
					this.screen[3].name = '酒店品牌';
					this.brandlists = [];
				}
				setTimeout(()=>{
					that.isreclik();
					that.search(1);
				},500)
			},
			isckleve(item, index) { //判断是否选中当前
				let it = this.levecllist;
				if (index == 0 && it.length == 0) {
					return true
				} else {
					for (var i = 0; i < it.length; i++) {
						if (it[i] == item.id) {
							return true
						}
					}
				}
			},
			ckprice(item,index){//选中价格
				if(item.id == this.hotpriceid){
					this.hotpriceid = -1;
				} else {
					this.hotpriceid = item.id;
				}
			},
			ckleve(item, index) { //点击酒店星级筛选
				let it = this.levecllist;
				if (index == 0) {
					this.levecllist = []
				} else {
					let leve = this.levecllist;
					let st = false
					for (var i = 0; i < leve.length; i++) {
						if (leve[i] == item.id) {
							st = true;
							this.levecllist.splice(i, 1)
						}
					}
					if (!st) {
						this.levecllist.push(item.id)
					}
				}
			},
			seclick(item, index) { //点击当前排序筛选.
				let that = this;
				if(that.stlist.length == 0){
					return
				}
				if(that.isindex == index){//点击当前打开的
					// if (that.isre_one == true) {
						that.closeShareBoxs();//关闭
						that.closeShareItems();
						that.isreclik();
					// }
				} else {
					if(that.isre_one == true){
						that.closeShareBoxs();//关闭
						that.closeShareItems();
						that.isindex = -1;
						setTimeout(()=>{
							that.openShareItems();
							that.openShareBoxs();//打开
							that.isre_one = true;
							that.isindex = index;
						},300)
					} else {
						that.isindex = index
						that.isre_one = true;
						that.openShareBoxs();
						that.openShareItems();
					}
				}
			},
			isreclik(){//关闭
				this.closeShareBoxs();//关闭帅选跟黑屏
				this.closeShareItems();
				this.isre_one = false;
				this.isindex = -1;
			},	
			closeShareItems(){//关闭筛选值
				this.animation.transition(this.$refs.shareItems, {
					styles: {
					},
					duration: 500, //ms
					timingFunction: 'ease',
					needLayout:false,
					delay: 0 //ms
					}, function () {
					}
				)
			},
			closeShareBoxs(){//关闭黑屏
				this.animation.transition(this.$refs.shareBoxs, {//关闭黑屏
					styles: {
						height: 0,
					},
					duration: 0, //ms
					timingFunction: 'ease',
					needLayout:false,
					delay: 0 //ms
					}, function () {
					}
				)
			},
			openShareItems(){//展开筛选值
				this.animation.transition(this.$refs.shareItems, {
					styles: {
						transform: 'translate(0,55px)',
					},
					duration: 300, //ms
					timingFunction: 'ease',
					needLayout:false,
					delay: 0 //ms
					}, function () {
					}
				)
			},
			openShareBoxs(){//展开黑屏
				this.animation.transition(this.$refs.shareBoxs, {
					styles: {
						height: this.screenHeights + 'px',
					},
					duration: 0, //ms
					timingFunction: 'ease',
					needLayout:false,
					delay: 0 //ms
					}, function () {
					}
				)
			},
			reclokc(item) { //选择筛选排序
				this.reconaid = item.id;
				this.screen[0].name = item.name;
				this.isreclik();
				this.search(1);
			},
			selectlist(item,index) { //点击详情
				this.itemdata['hotelCode'] = item.id;
				this.itemdata['searchHotelType'] = this.searchHotelType;
				uni.navigateTo({
					url: './hotellist/hotrllist?data=' + JSON.stringify(this.itemdata)+'&xx='+item.resGr
				})
			},
			async search(num) { //第一次加载
				let that = this;
				if(num == 1){
					that.hotellist = [];
					that.page = 1;
				} else {
					if (that.page > that.totalPatge) {
						return false;
					}
				}
				try {
					let lon_lat = ['',''];
					if(this.longitude != ''){
						lon_lat = utils.qqMapToBMap(this.longitude,this.latitude);//腾讯经纬度转百度
					}
					let datw = {
						lon:lon_lat[0],
						lat:lon_lat[1],
						cityCode: that.cityid,
						keyword: that.cityids,
						begin: that.startDate,
						end: that.endDate,
						pageCount: that.page,
						rowCount: 10,
						orderBy: [this.reconaid],
						searchCondition: {
							brandList:this.brandlists,//品牌
							hotelLevelList: this.selvlist(this.levecllist), //星级
							priceFromToList: this.priceFromTo //价格
						}
					}
					if(this.cityids != ''){
						this.positionInx == -1;//恢复位置默认值
						this.screen[2].name = '位置/距离';
						this.isposit = 0;//位置筛选默认选中下标
						this.positionVal = '';
					}
					if(this.positionInx != -1){
						if(this.positionInx == 0){//行政区
							datw['sectionName'] = this.positionVal;
						} else if(this.positionInx == 1){//机场车站
							datw['airRailWay'] = this.positionVal;
						} else if(this.positionInx == 2){//商圈
							datw['businessSectionInfo'] = this.positionVal;
						} else if(this.positionInx == 3){//地铁
							datw['subWay'] = this.positionVal;
						}
					}
					const res = await tork.sortHotelList(datw); //获取酒店列表
					if (res.code == 200) {
						that.page++; //得到数据之后page+1
						that.searchHotelType = res.data.searchHotelType;
						that.totalPatge = res.data.totalPatge; //总共多少页
						let das = res.data.responseResult;
						
						for (let i in das) {
							if(das[i].lon !=null && das[i].lat != null){ //判断经纬度不能为空
								let lon_lats = utils.bMapToQQMap(das[i].lon,das[i].lat);//百度地图转腾讯经纬度
								das[i].lon = lon_lats[0];
								das[i].lat = lon_lats[1];
							}
							das[i]['resGr'] = that.resGrade(das[i].resGrade);
						}
						that.maplistdata = das;
						if(num == 1){
							that.hotellist = das;
						} else {
							that.hotellist = that.hotellist.concat(das);
						}
						if(that.maplistdata.length > 0){
							if(that.longitude == ''){
								that.longitude = that.hotellist[0].lon;
								that.latitude = that.hotellist[0].lat;
							}
							this.ifone_show = true;//刷新重新设置大小
							that.maplistshow(0);
						}
						if (that.hotellist.length < 1) {
							uni.showToast({
								title:"没有合适的酒店信息",//提示文字
								mask:true,//是否显示透明蒙层，防止触摸穿透，默认：false
								icon:'none',
								duration:1000
							})
							this.imgFlag = false
						} else {
							this.mapshow = true;
						}
						if(this.stlist.length == 0){
							that.st_right_list();
						}
					}
				} catch (e) {
					uni.showToast({
						title:e,//提示文字
						mask:true,//是否显示透明蒙层，防止触摸穿透，默认：false
						icon:'none',
						duration:1000
					})
				}
			
			},
			resGrade(item) {
				if (['37', '32', '34'].includes(item)) {
					return 2
				} else if (['26', '31'].includes(item)) {
					return 3
				} else if (['24', '30'].includes(item)) {
					return 4
				} else if (['23', '28'].includes(item)) {
					return 5
				} else {
					return 1
				}
			},
			callback() {
			
			},
			async st_right_list() { //回显酒店信息
				let that = this;
				if (that.stlist.length > 0) {
					that.isShow_H5 = true;
				} else {
					try {
						const res = await tork.getCityDetail({
							'cityCode': that.cityid
						});
						if (res.code == 200) {
							that.stlist.push({
								name: '行政区',
								id: 1,
								isclk: false, //打开还是关闭
								oken: false, //是否超过6个
								list: res.data.cityArea //值
							})
							that.stlist.push({
								name: '机场车站',
								id: 2,
								isclk: false, //打开还是关闭
								oken: false, //是否超过6个
								list: res.data.cityAirRailWay //值
							})
							that.stlist.push({
								name: '商圈',
								id: 3,
								isclk: false, //打开还是关闭
								oken: false, //是否超过6个
								list: res.data.cityBusinessSectionInfo //值
							})
							that.stlist.push({
								name: '地铁',
								id: 4,
								isclk: false, //打开还是关闭
								oken: false, //是否超过6个
								list: res.data.citySubWay //值
							})
							that.stlist.push({
								name: '品牌',
								id: 5,
								isclk: false, //打开还是关闭
								oken: false, //是否超过6个
								list: that.hotelb(res.data.hotelBrands) //值
							})
							
						} else {
							this.showToasts(res.message);
						}
					} catch (e) {
						console.log(e)
					}
				}
			},
			hotelb(item) { //返回商圈的值
				let su = []
				for (var i = 0; i < item.length; i++) {
					su.push(item[i].hotelBrandName)
				}
				return su
			},
			
			delets() { //删除当前城市
				if (this.itemdata.isblcks == 1) {
					return
				}
				this.sevalie = '关键词/位置/酒店名';
				this.cityids = '';
				this.btclone(2);//清空位置参数
				
				
			},
			rblcok() {
				uni.navigateBack({
				})
			},
			selist(ev) {
				uni.navigateTo({
					url: '/pages/book/sselect-city/selectcity?sta=right&type=Hotel&list=' +
						this.cityid + '&sdata=1&wx_hotels=' + this.sevalie
				});
			}
		}
	}
</script>

<style scoped>
.iconfont {
	font-family: iconfont;  
}
.fontPrice{
	color: #FFA63E;
}
.hotlebox{
	width: 750rpx;
	flex: 1;
}
.hotmaps{
	width: 750rpx;
	flex: 1;
}
.maphotel {
	position: fixed;
	width: 700rpx;
	left: 25rpx;
	bottom: 100upx;
}
.image {
    width: 500rpx;
    height: 300px;
  }
  .slider {
    margin-top: 25px;
    margin-left: 25px;
    width: 500rpx;
    height: 300px;
    border-width: 2px;
    border-style: solid;
    border-color: #41B883;
  }
  .frame {
    width: 500rpx;
    height: 300px;
    position: relative;
  }
/* 中间切换按钮 */
.hotclicks{
	position: fixed;
	right: 10px;
	bottom: 250px;
	text-align: center;
	width: 60px;
	height: 60px;
	border-radius: 50%;
	
}
.hotclicksimgs{
	width:60px;
	height: 60px;
}


/* 帅选值选择切换 */
.share-box {
	width: 750rpx;
	height: 0px;
	position: fixed;
	top: 0px;
	left: 0px;
	background-color: rgba(0, 0, 0, 0.4);
}
		
.share-item {
	position: fixed;
	left: 25rpx;
	top: 40px;
	width:700rpx;
	background-color: #FFFFFF;
	border-radius: 6px;
}
.recommended {
	width: 700rpx;
}
.restst {
	width:680rpx;
	padding:10rpx 20rpx;
	font-size: 14px;
}
.restitle{
	font-size: 12px;
	line-height: 20px;
	color: #333333;
	font-weight: 600;
}
.htolevel {
	width: 650rpx;
	flex-direction: row;
	flex-wrap: wrap;
	justify-content: space-between;
}
.htlist {
	width: 199rpx;
	height: 70upx;
	flex-direction: row;
	justify-content: center;
	align-items: center;
	background-color: #f1f1f1;
	border-radius: 5px;
	margin: 2px;
}
.htlistfont{
	font-size: 13px;
	color: #333333;
}		
.ischekc {
	background-color: #cadbff;
}
.htlistfontec{
	color: #007aff;
}
			
.btnleve {
	width:700rpx;
	height: 50px;
	flex-direction: row;
	align-items: center;
	justify-content: center;
	box-shadow: 0px -1px 2px rgba(132, 150, 172, 0.4);
	background-color: #FFFFFF;
}
.btnlev_left {
	width: 300rpx;
	height: 35px;
	border-width: 1px;
	border-style: solid;
	border-color: #C0C0C0;
	border-radius: 5px;
}
			
.btnlev_right {
	margin-left: 10px;
	width: 300rpx;
	height: 35px;
	background: #007aff;
	border-radius: 5px;
}
.btnlevfont{
	font-size: 13px;
	text-align: center;
	line-height: 35px;
	color: #333333;
}	
.btnlev_rightfont{
	font-size: 13px;
	text-align: center;
	line-height: 35px;
	color: #FFFFFF;
}
.recommendedlist {
	width: 650rpx;
	font-size: 14px;
	padding:  0 50rpx;
	line-height: 50px;
	text-align: center;
	/* border-bottom: 2upx solid #F1F1F1; */
	position: relative;
	flex-direction: row;
	justify-content: space-between;
	align-items: center;
}
.refonts{
	font-size: 13px;
	line-height: 50px;
	color: #333333;
}
.iocrefonts{
	color: #007aff;
}
.posits{
	color: #007aff;
}

.position_ops{
	flex-direction: row;
}
.position-op-le{
	width: 225rpx;
	background-color: #F1F1F1;
}
.posi-lists{
	flex-direction: row;
	align-items: center;
}
.posi-lifont{
	font-size: 14px;
	line-height: 50px;
	margin-left: 22px;
	color: #333333;
}
.posi_o{
	width: 7px;
	height: 7px;
	border-radius: 50%;
	background-color: #FA6803;
	margin: 0 7px;
}
.posi_os{
	margin-left: 0;
}
.posi-lists-ok{
	background-color: #FFFFFF;
	color: #007AFF;
	font-weight: 700;
}
.position-op-ri{
	width: 475rpx;
	height: 500px;
	background-color: #FFFFFF;
}
.position-op-ri-li{
	border-bottom: 1px solid #F1F1F1;
	flex-direction: row;
	align-items: center;
	padding-right: 10px;
	justify-content: space-between;
}
.position-opfont{
	line-height: 50px;
	margin-left: 20px;
	font-size: 13px;
}
.position-opst{
	color: #007AFF;
}
.brandlist{
	flex-direction: row;
	justify-content: center;
	width:700rpx;
}
.remtops{
	margin-top: 20px;
}
.barndlist{
	width: 650rpx;
	flex-direction: row;
	flex-wrap: wrap;
	height: 500px;
}
.barndlist-li{
	height: 50px;
	width: 216rpx;
	flex-direction: row;
	justify-content: center
}
.barndlistdv{
	padding: 0 5px;
	height: 30px;
	width: 206rpx;
	margin-top: 10px;
	border-radius: 3px;
	background-color: #F1F1F1;
	border-radius: 5px;
}
.barndlist-lifont{
	color: #1e2c39;
	text-align: center;
	line-height: 30px;
	font-size: 14px;
}
.actives {
	background-color:#007aff;
	color: #ffffff;
}
/* 列表 */
.hotBox{
	position: fixed;
	left: 0;
	top: 105px;
	width: 750rpx;
	background: #F1F1F1;
	/* padding-left: 25rpx; */
	flex-direction: column;
	justify-content: center;
	align-items: center;
}
.hot_topsbx{
	width: 750rpx;
	height: 30rpx;
}
.hotelist {
	width: 700rpx;
}
.gjImg {
	width: 750rpx;
	flex: 1;
}

.noData {
	width: 346upx;
	height: 386upx;
	margin-top: 200upx;
}

.rblcok {
	width: 80px;
	height: 30px;
	/* border: 1px solid #007aff; */
	color: #666;
	text-align: center;
	line-height: 30px;
	border-radius: 4px;
	font-size:12px;
	margin-top: 10px;
}

.addlist{
	width: 750rpx;
	height: 50px;
	flex-direction: row;
	justify-content: center;
	
}
.addcls{
	width: 700rpx;
	height: 40px;
	text-align: center;
	background-color: #e1efff;
	flex-direction: row;
	align-items: center;
	justify-content: center;
	/* border: 2upx solid #6f9ce6; */
	border-radius: 5px;
}
.addlistfonts{
	font-size: 14px;
	color: #007AFF;
}
.hotels{
	width:700rpx;
	margin-bottom: 10px;
	flex-direction: row;
	align-items: center;
	border-radius: 18upx;
	background-color: #FFFFFF;
}
.hotleft{
	flex: 3;
	padding: 10px 0 10px 10px;
}
.hotleftimage{
	flex: 1;
	height: 100px;
	border-radius: 8upx;
}
.hotright{
	flex: 7;
	padding: 7px 5px 5px 15px;
}
.titles{
	font-size: 14px;
	line-height: 25px;
	font-weight: 700;
	lines:2;
	text-overflow:ellipsis;
}
.address{
	font-size: 13px;
	line-height: 20px;
	color: #666666;
}
.intros{
	font-size: 12px;
	line-height: 20px;
	color: #666666;
	lines:2;
	text-overflow:ellipsis;
}
.money{
	margin-top: 5px;
	flex-direction: row;
	justify-content: space-between;
	align-items: flex-end;
	color: #FA6803;
}
.resGrades{
	flex-direction: row;
	margin-bottom: 5px;
}
.resGradest{
	flex-direction: row;
	align-items: center;
	font-size: 21px;
	color: #FFA63E;
}
.monsle{
	font-size:12px;
}
.mosrig{
	margin-left:5px;
	font-size: 12px;
}


/* 顶部导航 */
.hot_topst {
	position: fixed;
	left: 25rpx;
	top: 35px;
	/* margin: 10px; */
	border-radius: 7px;
	width: 700rpx;
	background: #FFFFFF;
}
.Navigations {
	height:45px;
	flex-direction: row;
	align-items: center;
	justify-content: center;
}
.smtis{
	width: 40px;
	height: 45px;
	align-items: center;
	justify-content: center;
}
.ongbutns {
	width: 560rpx;
	padding: 0 8px;
	height: 32px;
	background: #f1f1f1;
	border-radius: 32px;
	flex-direction: row;
	align-items: center;
}
	
.onleft {
	height: 32px;
	font-size: 12px;
	flex-direction: row;
	align-items: center;
}

.on_olefts{
	width: 25px;
	flex-direction: row;
	justify-content: center;
	align-items: center;
}
.on_orights{
	width: 50px;
	height: 32px;
	flex-direction: column;
}
.on_tst{
	width: 50px;
	height: 16px;
	flex-direction: row;
	justify-content: center;
	align-items: center;
}
.onfonts{
	color: #C0C0C0;
	font-size: 12px;
}
.tr-colors{
	color: #007aff;
}
.onright {
	border-left: 1px solid #FFFFFF;
	height: 32px;
	line-height: 32px;
	flex-direction: row;
	justify-content: center;
	align-items: center;
}
.orvlues {
	margin-left: 5%;
	font-size: 14px;
	width: 300rpx;
	height: 32px;
	color: #E5E5E5;
}
	
.sel_coi {
	width: 680rpx;
	height: 35px;
	/* padding: 0 10rpx; */
	flex-direction: row;
	align-items: center;
	/* box-shadow: 2px 3px 3px rgba(165, 194, 231, 0.4); */
}
.se_list {
	flex: 3;
	height: 35px;
	font-size: 13px;
	color: #333333;
}
.se_nlis{
	height: 35px;
	flex-direction: row;
	align-items: center;
	justify-content: center;
}
.se_lname{
	width: 150rpx;
	font-size: 13px;
	text-align: center;
	
}
.se_lnames{
	lines:1;
	text-overflow:ellipsis;
}
.seimgs{
	margin-left: 2px;
	width: 7px;
	height: 3px;
}
.se_okli{
	color: #007aff;
}



</style>
